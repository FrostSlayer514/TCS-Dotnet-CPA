using System;
using System.Collections.Generic;
namespace Solution
{
    class Cake:IComparable<Cake>
    {
        public int id;
        public string name;
        public int size;
        public double price;
        public bool eggless;
        public Cake(int id,string name,int size,double price,bool eggless)
        {
            this.id=id;
            this.name=name;
            this.size=size;
            this.price=price;
            this.eggless=eggless;
        }
        public int CompareTo(Cake obj)
        {
            return price.CompareTo(obj.price);
        }
    }
    class Managememt
    {
        public static void Main()
        {
            int n=Convert.ToInt32(Console.ReadLine());
            List<Cake> cakes=new List<Cake>();
            for(int i=0;i<n;i++)
            {
                int id=Convert.ToInt32(Console.ReadLine());
                string name=Console.ReadLine();
                int size=Convert.ToInt32(Console.ReadLine());
                double price=Convert.ToDouble(Console.ReadLine());
                bool eggless=Convert.ToBoolean(Console.ReadLine());
                Cake cs=new Cake(id,name,size,price,eggless);
                cakes.Add(cs);
            }
            int ch=Convert.ToInt32(Console.ReadLine());
            switch(ch)
            {
                case 1:
                int in_size=Convert.ToInt32(Console.ReadLine());
                int count=0;
                foreach(Cake cu in cakes)
                {
                    if(cu.size==in_size)
                    {
                        count++;
                    }
                }
                if(count==0)
                {
                    Console.WriteLine("No Cake with given size found");
                }
                else
                {
                    Console.WriteLine(count);
                }
                break;
                case 2:
                cakes.Sort();
                cakes.Reverse();
                Console.WriteLine(cakes[0].price);
                break;
            }
        }
    }
}